/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.28.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration,
  IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationList,
  IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration,
  IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationList,
  IoK8sApimachineryPkgApisMetaV1APIResourceList,
  IoK8sApimachineryPkgApisMetaV1DeleteOptions,
  IoK8sApimachineryPkgApisMetaV1Status,
  IoK8sApimachineryPkgApisMetaV1WatchEvent,
} from '../models/index';
import {
    IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationFromJSON,
    IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationToJSON,
    IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationListFromJSON,
    IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationListToJSON,
    IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationFromJSON,
    IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationToJSON,
    IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationListFromJSON,
    IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationListToJSON,
    IoK8sApimachineryPkgApisMetaV1APIResourceListFromJSON,
    IoK8sApimachineryPkgApisMetaV1APIResourceListToJSON,
    IoK8sApimachineryPkgApisMetaV1DeleteOptionsFromJSON,
    IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON,
    IoK8sApimachineryPkgApisMetaV1StatusFromJSON,
    IoK8sApimachineryPkgApisMetaV1StatusToJSON,
    IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON,
    IoK8sApimachineryPkgApisMetaV1WatchEventToJSON,
} from '../models/index';

export interface CreateAdmissionregistrationV1MutatingWebhookConfigurationRequest {
    body: IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}

export interface CreateAdmissionregistrationV1ValidatingWebhookConfigurationRequest {
    body: IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}

export interface DeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationRequest {
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    sendInitialEvents?: boolean;
    timeoutSeconds?: number;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}

export interface DeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationRequest {
    pretty?: string;
    _continue?: string;
    dryRun?: string;
    fieldSelector?: string;
    gracePeriodSeconds?: number;
    labelSelector?: string;
    limit?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    sendInitialEvents?: boolean;
    timeoutSeconds?: number;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}

export interface DeleteAdmissionregistrationV1MutatingWebhookConfigurationRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}

export interface DeleteAdmissionregistrationV1ValidatingWebhookConfigurationRequest {
    name: string;
    pretty?: string;
    dryRun?: string;
    gracePeriodSeconds?: number;
    orphanDependents?: boolean;
    propagationPolicy?: string;
    body?: IoK8sApimachineryPkgApisMetaV1DeleteOptions;
}

export interface ListAdmissionregistrationV1MutatingWebhookConfigurationRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    sendInitialEvents?: boolean;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface ListAdmissionregistrationV1ValidatingWebhookConfigurationRequest {
    pretty?: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    sendInitialEvents?: boolean;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface PatchAdmissionregistrationV1MutatingWebhookConfigurationRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}

export interface PatchAdmissionregistrationV1ValidatingWebhookConfigurationRequest {
    name: string;
    body: object;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
    force?: boolean;
}

export interface ReadAdmissionregistrationV1MutatingWebhookConfigurationRequest {
    name: string;
    pretty?: string;
}

export interface ReadAdmissionregistrationV1ValidatingWebhookConfigurationRequest {
    name: string;
    pretty?: string;
}

export interface ReplaceAdmissionregistrationV1MutatingWebhookConfigurationRequest {
    name: string;
    body: IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}

export interface ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationRequest {
    name: string;
    body: IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration;
    pretty?: string;
    dryRun?: string;
    fieldManager?: string;
    fieldValidation?: string;
}

export interface WatchAdmissionregistrationV1MutatingWebhookConfigurationRequest {
    name: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    sendInitialEvents?: boolean;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface WatchAdmissionregistrationV1MutatingWebhookConfigurationListRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    sendInitialEvents?: boolean;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface WatchAdmissionregistrationV1ValidatingWebhookConfigurationRequest {
    name: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    sendInitialEvents?: boolean;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface WatchAdmissionregistrationV1ValidatingWebhookConfigurationListRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    sendInitialEvents?: boolean;
    timeoutSeconds?: number;
    watch?: boolean;
}

/**
 * 
 */
export class AdmissionregistrationV1Api extends runtime.BaseAPI {

    /**
     * create a MutatingWebhookConfiguration
     */
    async createAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters: CreateAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling createAdmissionregistrationV1MutatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.fieldValidation !== undefined) {
            queryParameters['fieldValidation'] = requestParameters.fieldValidation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationFromJSON(jsonValue));
    }

    /**
     * create a MutatingWebhookConfiguration
     */
    async createAdmissionregistrationV1MutatingWebhookConfiguration(requestParameters: CreateAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration> {
        const response = await this.createAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * create a ValidatingWebhookConfiguration
     */
    async createAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters: CreateAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling createAdmissionregistrationV1ValidatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.fieldValidation !== undefined) {
            queryParameters['fieldValidation'] = requestParameters.fieldValidation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationFromJSON(jsonValue));
    }

    /**
     * create a ValidatingWebhookConfiguration
     */
    async createAdmissionregistrationV1ValidatingWebhookConfiguration(requestParameters: CreateAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration> {
        const response = await this.createAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete collection of MutatingWebhookConfiguration
     */
    async deleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationRaw(requestParameters: DeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>> {
        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.gracePeriodSeconds !== undefined) {
            queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.orphanDependents !== undefined) {
            queryParameters['orphanDependents'] = requestParameters.orphanDependents;
        }

        if (requestParameters.propagationPolicy !== undefined) {
            queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.sendInitialEvents !== undefined) {
            queryParameters['sendInitialEvents'] = requestParameters.sendInitialEvents;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1StatusFromJSON(jsonValue));
    }

    /**
     * delete collection of MutatingWebhookConfiguration
     */
    async deleteAdmissionregistrationV1CollectionMutatingWebhookConfiguration(requestParameters: DeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1Status> {
        const response = await this.deleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete collection of ValidatingWebhookConfiguration
     */
    async deleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationRaw(requestParameters: DeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>> {
        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.gracePeriodSeconds !== undefined) {
            queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.orphanDependents !== undefined) {
            queryParameters['orphanDependents'] = requestParameters.orphanDependents;
        }

        if (requestParameters.propagationPolicy !== undefined) {
            queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.sendInitialEvents !== undefined) {
            queryParameters['sendInitialEvents'] = requestParameters.sendInitialEvents;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1StatusFromJSON(jsonValue));
    }

    /**
     * delete collection of ValidatingWebhookConfiguration
     */
    async deleteAdmissionregistrationV1CollectionValidatingWebhookConfiguration(requestParameters: DeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1Status> {
        const response = await this.deleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete a MutatingWebhookConfiguration
     */
    async deleteAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters: DeleteAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling deleteAdmissionregistrationV1MutatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.gracePeriodSeconds !== undefined) {
            queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
        }

        if (requestParameters.orphanDependents !== undefined) {
            queryParameters['orphanDependents'] = requestParameters.orphanDependents;
        }

        if (requestParameters.propagationPolicy !== undefined) {
            queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1StatusFromJSON(jsonValue));
    }

    /**
     * delete a MutatingWebhookConfiguration
     */
    async deleteAdmissionregistrationV1MutatingWebhookConfiguration(requestParameters: DeleteAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1Status> {
        const response = await this.deleteAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * delete a ValidatingWebhookConfiguration
     */
    async deleteAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters: DeleteAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1Status>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling deleteAdmissionregistrationV1ValidatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.gracePeriodSeconds !== undefined) {
            queryParameters['gracePeriodSeconds'] = requestParameters.gracePeriodSeconds;
        }

        if (requestParameters.orphanDependents !== undefined) {
            queryParameters['orphanDependents'] = requestParameters.orphanDependents;
        }

        if (requestParameters.propagationPolicy !== undefined) {
            queryParameters['propagationPolicy'] = requestParameters.propagationPolicy;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApimachineryPkgApisMetaV1DeleteOptionsToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1StatusFromJSON(jsonValue));
    }

    /**
     * delete a ValidatingWebhookConfiguration
     */
    async deleteAdmissionregistrationV1ValidatingWebhookConfiguration(requestParameters: DeleteAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1Status> {
        const response = await this.deleteAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * get available resources
     */
    async getAdmissionregistrationV1APIResourcesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1APIResourceList>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1APIResourceListFromJSON(jsonValue));
    }

    /**
     * get available resources
     */
    async getAdmissionregistrationV1APIResources(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1APIResourceList> {
        const response = await this.getAdmissionregistrationV1APIResourcesRaw(initOverrides);
        return await response.value();
    }

    /**
     * list or watch objects of kind MutatingWebhookConfiguration
     */
    async listAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters: ListAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationList>> {
        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.sendInitialEvents !== undefined) {
            queryParameters['sendInitialEvents'] = requestParameters.sendInitialEvents;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationListFromJSON(jsonValue));
    }

    /**
     * list or watch objects of kind MutatingWebhookConfiguration
     */
    async listAdmissionregistrationV1MutatingWebhookConfiguration(requestParameters: ListAdmissionregistrationV1MutatingWebhookConfigurationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationList> {
        const response = await this.listAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * list or watch objects of kind ValidatingWebhookConfiguration
     */
    async listAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters: ListAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationList>> {
        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.sendInitialEvents !== undefined) {
            queryParameters['sendInitialEvents'] = requestParameters.sendInitialEvents;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationListFromJSON(jsonValue));
    }

    /**
     * list or watch objects of kind ValidatingWebhookConfiguration
     */
    async listAdmissionregistrationV1ValidatingWebhookConfiguration(requestParameters: ListAdmissionregistrationV1ValidatingWebhookConfigurationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationList> {
        const response = await this.listAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * partially update the specified MutatingWebhookConfiguration
     */
    async patchAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters: PatchAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling patchAdmissionregistrationV1MutatingWebhookConfiguration.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchAdmissionregistrationV1MutatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.fieldValidation !== undefined) {
            queryParameters['fieldValidation'] = requestParameters.fieldValidation;
        }

        if (requestParameters.force !== undefined) {
            queryParameters['force'] = requestParameters.force;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationFromJSON(jsonValue));
    }

    /**
     * partially update the specified MutatingWebhookConfiguration
     */
    async patchAdmissionregistrationV1MutatingWebhookConfiguration(requestParameters: PatchAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration> {
        const response = await this.patchAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * partially update the specified ValidatingWebhookConfiguration
     */
    async patchAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters: PatchAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling patchAdmissionregistrationV1ValidatingWebhookConfiguration.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling patchAdmissionregistrationV1ValidatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.fieldValidation !== undefined) {
            queryParameters['fieldValidation'] = requestParameters.fieldValidation;
        }

        if (requestParameters.force !== undefined) {
            queryParameters['force'] = requestParameters.force;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationFromJSON(jsonValue));
    }

    /**
     * partially update the specified ValidatingWebhookConfiguration
     */
    async patchAdmissionregistrationV1ValidatingWebhookConfiguration(requestParameters: PatchAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration> {
        const response = await this.patchAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read the specified MutatingWebhookConfiguration
     */
    async readAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters: ReadAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readAdmissionregistrationV1MutatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationFromJSON(jsonValue));
    }

    /**
     * read the specified MutatingWebhookConfiguration
     */
    async readAdmissionregistrationV1MutatingWebhookConfiguration(requestParameters: ReadAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration> {
        const response = await this.readAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read the specified ValidatingWebhookConfiguration
     */
    async readAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters: ReadAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readAdmissionregistrationV1ValidatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationFromJSON(jsonValue));
    }

    /**
     * read the specified ValidatingWebhookConfiguration
     */
    async readAdmissionregistrationV1ValidatingWebhookConfiguration(requestParameters: ReadAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration> {
        const response = await this.readAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * replace the specified MutatingWebhookConfiguration
     */
    async replaceAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters: ReplaceAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling replaceAdmissionregistrationV1MutatingWebhookConfiguration.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling replaceAdmissionregistrationV1MutatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.fieldValidation !== undefined) {
            queryParameters['fieldValidation'] = requestParameters.fieldValidation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAdmissionregistrationV1MutatingWebhookConfigurationFromJSON(jsonValue));
    }

    /**
     * replace the specified MutatingWebhookConfiguration
     */
    async replaceAdmissionregistrationV1MutatingWebhookConfiguration(requestParameters: ReplaceAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAdmissionregistrationV1MutatingWebhookConfiguration> {
        const response = await this.replaceAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * replace the specified ValidatingWebhookConfiguration
     */
    async replaceAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters: ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling replaceAdmissionregistrationV1ValidatingWebhookConfiguration.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling replaceAdmissionregistrationV1ValidatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.fieldValidation !== undefined) {
            queryParameters['fieldValidation'] = requestParameters.fieldValidation;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAdmissionregistrationV1ValidatingWebhookConfigurationFromJSON(jsonValue));
    }

    /**
     * replace the specified ValidatingWebhookConfiguration
     */
    async replaceAdmissionregistrationV1ValidatingWebhookConfiguration(requestParameters: ReplaceAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApiAdmissionregistrationV1ValidatingWebhookConfiguration> {
        const response = await this.replaceAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * watch changes to an object of kind MutatingWebhookConfiguration. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    async watchAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters: WatchAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling watchAdmissionregistrationV1MutatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.sendInitialEvents !== undefined) {
            queryParameters['sendInitialEvents'] = requestParameters.sendInitialEvents;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/watch/mutatingwebhookconfigurations/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON(jsonValue));
    }

    /**
     * watch changes to an object of kind MutatingWebhookConfiguration. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    async watchAdmissionregistrationV1MutatingWebhookConfiguration(requestParameters: WatchAdmissionregistrationV1MutatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent> {
        const response = await this.watchAdmissionregistrationV1MutatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * watch individual changes to a list of MutatingWebhookConfiguration. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    async watchAdmissionregistrationV1MutatingWebhookConfigurationListRaw(requestParameters: WatchAdmissionregistrationV1MutatingWebhookConfigurationListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>> {
        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.sendInitialEvents !== undefined) {
            queryParameters['sendInitialEvents'] = requestParameters.sendInitialEvents;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/watch/mutatingwebhookconfigurations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON(jsonValue));
    }

    /**
     * watch individual changes to a list of MutatingWebhookConfiguration. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    async watchAdmissionregistrationV1MutatingWebhookConfigurationList(requestParameters: WatchAdmissionregistrationV1MutatingWebhookConfigurationListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent> {
        const response = await this.watchAdmissionregistrationV1MutatingWebhookConfigurationListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * watch changes to an object of kind ValidatingWebhookConfiguration. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    async watchAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters: WatchAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling watchAdmissionregistrationV1ValidatingWebhookConfiguration.');
        }

        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.sendInitialEvents !== undefined) {
            queryParameters['sendInitialEvents'] = requestParameters.sendInitialEvents;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/watch/validatingwebhookconfigurations/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON(jsonValue));
    }

    /**
     * watch changes to an object of kind ValidatingWebhookConfiguration. deprecated: use the \'watch\' parameter with a list operation instead, filtered to a single item with the \'fieldSelector\' parameter.
     */
    async watchAdmissionregistrationV1ValidatingWebhookConfiguration(requestParameters: WatchAdmissionregistrationV1ValidatingWebhookConfigurationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent> {
        const response = await this.watchAdmissionregistrationV1ValidatingWebhookConfigurationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * watch individual changes to a list of ValidatingWebhookConfiguration. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    async watchAdmissionregistrationV1ValidatingWebhookConfigurationListRaw(requestParameters: WatchAdmissionregistrationV1ValidatingWebhookConfigurationListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1WatchEvent>> {
        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.sendInitialEvents !== undefined) {
            queryParameters['sendInitialEvents'] = requestParameters.sendInitialEvents;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/admissionregistration.k8s.io/v1/watch/validatingwebhookconfigurations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1WatchEventFromJSON(jsonValue));
    }

    /**
     * watch individual changes to a list of ValidatingWebhookConfiguration. deprecated: use the \'watch\' parameter with a list operation instead.
     */
    async watchAdmissionregistrationV1ValidatingWebhookConfigurationList(requestParameters: WatchAdmissionregistrationV1ValidatingWebhookConfigurationListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1WatchEvent> {
        const response = await this.watchAdmissionregistrationV1ValidatingWebhookConfigurationListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
