/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.28.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  IoK8sApimachineryPkgApisMetaV1APIResourceList,
  IoK8sMetricsPkgApisMetricsV1beta1NodeMetrics,
  IoK8sMetricsPkgApisMetricsV1beta1NodeMetricsList,
  IoK8sMetricsPkgApisMetricsV1beta1PodMetrics,
  IoK8sMetricsPkgApisMetricsV1beta1PodMetricsList,
} from '../models/index';
import {
    IoK8sApimachineryPkgApisMetaV1APIResourceListFromJSON,
    IoK8sApimachineryPkgApisMetaV1APIResourceListToJSON,
    IoK8sMetricsPkgApisMetricsV1beta1NodeMetricsFromJSON,
    IoK8sMetricsPkgApisMetricsV1beta1NodeMetricsToJSON,
    IoK8sMetricsPkgApisMetricsV1beta1NodeMetricsListFromJSON,
    IoK8sMetricsPkgApisMetricsV1beta1NodeMetricsListToJSON,
    IoK8sMetricsPkgApisMetricsV1beta1PodMetricsFromJSON,
    IoK8sMetricsPkgApisMetricsV1beta1PodMetricsToJSON,
    IoK8sMetricsPkgApisMetricsV1beta1PodMetricsListFromJSON,
    IoK8sMetricsPkgApisMetricsV1beta1PodMetricsListToJSON,
} from '../models/index';

export interface ListMetricsV1beta1NamespacedPodMetricsRequest {
    namespace: string;
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface ListMetricsV1beta1NodeMetricsRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface ListMetricsV1beta1PodMetricsForAllNamespacesRequest {
    allowWatchBookmarks?: boolean;
    _continue?: string;
    fieldSelector?: string;
    labelSelector?: string;
    limit?: number;
    pretty?: string;
    resourceVersion?: string;
    resourceVersionMatch?: string;
    timeoutSeconds?: number;
    watch?: boolean;
}

export interface ReadMetricsV1beta1NamespacedPodMetricsRequest {
    name: string;
    namespace: string;
    pretty?: string;
}

export interface ReadMetricsV1beta1NodeMetricsRequest {
    name: string;
    pretty?: string;
}

/**
 * 
 */
export class MetricsV1beta1Api extends runtime.BaseAPI {

    /**
     * get available resources
     */
    async getMetricsV1beta1APIResourcesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1APIResourceList>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/metrics.k8s.io/v1beta1/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1APIResourceListFromJSON(jsonValue));
    }

    /**
     * get available resources
     */
    async getMetricsV1beta1APIResources(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sApimachineryPkgApisMetaV1APIResourceList> {
        const response = await this.getMetricsV1beta1APIResourcesRaw(initOverrides);
        return await response.value();
    }

    /**
     * list objects of kind PodMetrics
     */
    async listMetricsV1beta1NamespacedPodMetricsRaw(requestParameters: ListMetricsV1beta1NamespacedPodMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sMetricsPkgApisMetricsV1beta1PodMetricsList>> {
        if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
            throw new runtime.RequiredError('namespace','Required parameter requestParameters.namespace was null or undefined when calling listMetricsV1beta1NamespacedPodMetrics.');
        }

        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/metrics.k8s.io/v1beta1/namespaces/{namespace}/pods`.replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sMetricsPkgApisMetricsV1beta1PodMetricsListFromJSON(jsonValue));
    }

    /**
     * list objects of kind PodMetrics
     */
    async listMetricsV1beta1NamespacedPodMetrics(requestParameters: ListMetricsV1beta1NamespacedPodMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sMetricsPkgApisMetricsV1beta1PodMetricsList> {
        const response = await this.listMetricsV1beta1NamespacedPodMetricsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * list objects of kind NodeMetrics
     */
    async listMetricsV1beta1NodeMetricsRaw(requestParameters: ListMetricsV1beta1NodeMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sMetricsPkgApisMetricsV1beta1NodeMetricsList>> {
        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/metrics.k8s.io/v1beta1/nodes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sMetricsPkgApisMetricsV1beta1NodeMetricsListFromJSON(jsonValue));
    }

    /**
     * list objects of kind NodeMetrics
     */
    async listMetricsV1beta1NodeMetrics(requestParameters: ListMetricsV1beta1NodeMetricsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sMetricsPkgApisMetricsV1beta1NodeMetricsList> {
        const response = await this.listMetricsV1beta1NodeMetricsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * list objects of kind PodMetrics
     */
    async listMetricsV1beta1PodMetricsForAllNamespacesRaw(requestParameters: ListMetricsV1beta1PodMetricsForAllNamespacesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sMetricsPkgApisMetricsV1beta1PodMetricsList>> {
        const queryParameters: any = {};

        if (requestParameters.allowWatchBookmarks !== undefined) {
            queryParameters['allowWatchBookmarks'] = requestParameters.allowWatchBookmarks;
        }

        if (requestParameters._continue !== undefined) {
            queryParameters['continue'] = requestParameters._continue;
        }

        if (requestParameters.fieldSelector !== undefined) {
            queryParameters['fieldSelector'] = requestParameters.fieldSelector;
        }

        if (requestParameters.labelSelector !== undefined) {
            queryParameters['labelSelector'] = requestParameters.labelSelector;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        if (requestParameters.resourceVersion !== undefined) {
            queryParameters['resourceVersion'] = requestParameters.resourceVersion;
        }

        if (requestParameters.resourceVersionMatch !== undefined) {
            queryParameters['resourceVersionMatch'] = requestParameters.resourceVersionMatch;
        }

        if (requestParameters.timeoutSeconds !== undefined) {
            queryParameters['timeoutSeconds'] = requestParameters.timeoutSeconds;
        }

        if (requestParameters.watch !== undefined) {
            queryParameters['watch'] = requestParameters.watch;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/metrics.k8s.io/v1beta1/pods`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sMetricsPkgApisMetricsV1beta1PodMetricsListFromJSON(jsonValue));
    }

    /**
     * list objects of kind PodMetrics
     */
    async listMetricsV1beta1PodMetricsForAllNamespaces(requestParameters: ListMetricsV1beta1PodMetricsForAllNamespacesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sMetricsPkgApisMetricsV1beta1PodMetricsList> {
        const response = await this.listMetricsV1beta1PodMetricsForAllNamespacesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read the specified PodMetrics
     */
    async readMetricsV1beta1NamespacedPodMetricsRaw(requestParameters: ReadMetricsV1beta1NamespacedPodMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sMetricsPkgApisMetricsV1beta1PodMetrics>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readMetricsV1beta1NamespacedPodMetrics.');
        }

        if (requestParameters.namespace === null || requestParameters.namespace === undefined) {
            throw new runtime.RequiredError('namespace','Required parameter requestParameters.namespace was null or undefined when calling readMetricsV1beta1NamespacedPodMetrics.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/metrics.k8s.io/v1beta1/namespaces/{namespace}/pods/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))).replace(`{${"namespace"}}`, encodeURIComponent(String(requestParameters.namespace))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sMetricsPkgApisMetricsV1beta1PodMetricsFromJSON(jsonValue));
    }

    /**
     * read the specified PodMetrics
     */
    async readMetricsV1beta1NamespacedPodMetrics(requestParameters: ReadMetricsV1beta1NamespacedPodMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sMetricsPkgApisMetricsV1beta1PodMetrics> {
        const response = await this.readMetricsV1beta1NamespacedPodMetricsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * read the specified NodeMetrics
     */
    async readMetricsV1beta1NodeMetricsRaw(requestParameters: ReadMetricsV1beta1NodeMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<IoK8sMetricsPkgApisMetricsV1beta1NodeMetrics>> {
        if (requestParameters.name === null || requestParameters.name === undefined) {
            throw new runtime.RequiredError('name','Required parameter requestParameters.name was null or undefined when calling readMetricsV1beta1NodeMetrics.');
        }

        const queryParameters: any = {};

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/metrics.k8s.io/v1beta1/nodes/{name}`.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters.name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sMetricsPkgApisMetricsV1beta1NodeMetricsFromJSON(jsonValue));
    }

    /**
     * read the specified NodeMetrics
     */
    async readMetricsV1beta1NodeMetrics(requestParameters: ReadMetricsV1beta1NodeMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<IoK8sMetricsPkgApisMetricsV1beta1NodeMetrics> {
        const response = await this.readMetricsV1beta1NodeMetricsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
