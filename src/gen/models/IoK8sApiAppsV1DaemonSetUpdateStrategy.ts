/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.28.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IoK8sApiAppsV1RollingUpdateDaemonSet } from './IoK8sApiAppsV1RollingUpdateDaemonSet';
import {
    IoK8sApiAppsV1RollingUpdateDaemonSetFromJSON,
    IoK8sApiAppsV1RollingUpdateDaemonSetFromJSONTyped,
    IoK8sApiAppsV1RollingUpdateDaemonSetToJSON,
} from './IoK8sApiAppsV1RollingUpdateDaemonSet';

/**
 * DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
 * @export
 * @interface IoK8sApiAppsV1DaemonSetUpdateStrategy
 */
export interface IoK8sApiAppsV1DaemonSetUpdateStrategy {
    /**
     * 
     * @type {IoK8sApiAppsV1RollingUpdateDaemonSet}
     * @memberof IoK8sApiAppsV1DaemonSetUpdateStrategy
     */
    rollingUpdate?: IoK8sApiAppsV1RollingUpdateDaemonSet;
    /**
     * Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
     * 
     * Possible enum values:
     *  - `"OnDelete"` Replace the old daemons only when it's killed
     *  - `"RollingUpdate"` Replace the old daemons by new ones using rolling update i.e replace them on each node one after the other.
     * @type {string}
     * @memberof IoK8sApiAppsV1DaemonSetUpdateStrategy
     */
    type?: IoK8sApiAppsV1DaemonSetUpdateStrategyTypeEnum;
}


/**
 * @export
 */
export const IoK8sApiAppsV1DaemonSetUpdateStrategyTypeEnum = {
    OnDelete: 'OnDelete',
    RollingUpdate: 'RollingUpdate'
} as const;
export type IoK8sApiAppsV1DaemonSetUpdateStrategyTypeEnum = typeof IoK8sApiAppsV1DaemonSetUpdateStrategyTypeEnum[keyof typeof IoK8sApiAppsV1DaemonSetUpdateStrategyTypeEnum];


/**
 * Check if a given object implements the IoK8sApiAppsV1DaemonSetUpdateStrategy interface.
 */
export function instanceOfIoK8sApiAppsV1DaemonSetUpdateStrategy(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IoK8sApiAppsV1DaemonSetUpdateStrategyFromJSON(json: any): IoK8sApiAppsV1DaemonSetUpdateStrategy {
    return IoK8sApiAppsV1DaemonSetUpdateStrategyFromJSONTyped(json, false);
}

export function IoK8sApiAppsV1DaemonSetUpdateStrategyFromJSONTyped(json: any, ignoreDiscriminator: boolean): IoK8sApiAppsV1DaemonSetUpdateStrategy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rollingUpdate': !exists(json, 'rollingUpdate') ? undefined : IoK8sApiAppsV1RollingUpdateDaemonSetFromJSON(json['rollingUpdate']),
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function IoK8sApiAppsV1DaemonSetUpdateStrategyToJSON(value?: IoK8sApiAppsV1DaemonSetUpdateStrategy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rollingUpdate': IoK8sApiAppsV1RollingUpdateDaemonSetToJSON(value.rollingUpdate),
        'type': value.type,
    };
}

